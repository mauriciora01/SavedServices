<?xml version="1.0" encoding="utf-8"?>
<dta:AlarmsActivity xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:dta="clr-namespace:Dataifx.Trading.Activity;assembly=Dataifx.Trading.Activity" xmlns:dtim="clr-namespace:Dataifx.Trading.Infrastructure.Models;assembly=Dataifx.Trading.Infrastructure" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>Dataifx.Trading.CommonObjects</x:String>
      <x:String>Dataifx.Trading.Infrastructure.Models</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Dataifx.Trading.Business.Correval</AssemblyReference>
      <AssemblyReference>Dataifx.Trading.Business</AssemblyReference>
      <AssemblyReference>Dataifx.Trading.CommonObjects</AssemblyReference>
      <AssemblyReference>Dataifx.Trading.Data</AssemblyReference>
      <AssemblyReference>Dataifx.Trading.Infrastructure</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Dataifx.Trading.Activity</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <dta:AlarmsActivity.Implementation>
    <Flowchart>
      <Flowchart.Variables>
        <Variable x:TypeArguments="x:String" Name="strIndicador" />
        <Variable x:TypeArguments="x:Char" Name="strBussinessType" />
        <Variable x:TypeArguments="x:Char" Name="strOrderType" />
        <Variable x:TypeArguments="x:Int32" Name="IdAlarm" />
      </Flowchart.Variables>
      <Flowchart.StartNode>
        <FlowDecision x:Name="__ReferenceID6">
          <FlowDecision.Condition>
            <mca:CSharpValue x:TypeArguments="x:Boolean">Alarma.Indicator == Infrastructure.Enumerations.IndicatorAlarmcs.MayorOIgual</mca:CSharpValue>
          </FlowDecision.Condition>
          <FlowDecision.True>
            <FlowStep x:Name="__ReferenceID7">
              <Assign>
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">
                    <mca:CSharpReference x:TypeArguments="x:String">strIndicador</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Mayor o Igual</InArgument>
                </Assign.Value>
              </Assign>
              <FlowStep.Next>
                <FlowDecision x:Name="__ReferenceID5">
                  <FlowDecision.Condition>
                    <mca:CSharpValue x:TypeArguments="x:Boolean">Alarma.Order.Id == 0</mca:CSharpValue>
                  </FlowDecision.Condition>
                  <FlowDecision.True>
                    <FlowDecision x:Name="__ReferenceID11">
                      <FlowDecision.Condition>
                        <mca:CSharpValue x:TypeArguments="x:Boolean">Alarma.Order.BussinessType == Infrastructure.Enumerations.TransactionType.Buy</mca:CSharpValue>
                      </FlowDecision.Condition>
                      <FlowDecision.True>
                        <FlowStep x:Name="__ReferenceID12">
                          <Assign>
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Char">
                                <mca:CSharpReference x:TypeArguments="x:Char">strBussinessType</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Char">C</InArgument>
                            </Assign.Value>
                          </Assign>
                          <FlowStep.Next>
                            <FlowDecision x:Name="__ReferenceID3">
                              <FlowDecision.Condition>
                                <mca:CSharpValue x:TypeArguments="x:Boolean">Alarma.Order.OrdeType.Id.ToString().Length &gt; 0</mca:CSharpValue>
                              </FlowDecision.Condition>
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID14">
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Char">
                                        <mca:CSharpReference x:TypeArguments="x:Char">strOrderType</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Char">
                                        <mca:CSharpValue x:TypeArguments="x:Char">Alarma.Order.OrdeType.Id</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <FlowStep.Next>
                                    <FlowSwitch x:TypeArguments="x:Int32" x:Name="__ReferenceID2">
                                      <FlowSwitch.Expression>
                                        <mca:CSharpValue x:TypeArguments="x:Int32">IdFirma</mca:CSharpValue>
                                      </FlowSwitch.Expression>
                                      <FlowStep x:Key="0" x:Name="__ReferenceID1">
                                        <Assign>
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int64">
                                              <mca:CSharpReference x:TypeArguments="x:Int64">lIdPreorden</mca:CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int64">
                                              <mca:CSharpValue x:TypeArguments="x:Int64" xml:space="preserve">Data.Orden.AdicionarAlarma(Alarma.Order.Instrument.mnemonic,
                        Alarma.Order.Client.Id, strOrderType, strBussinessType,
                        Alarma.Order.Quantity, Convert.ToDecimal(Alarma.Order.Value), Alarma.Order.EffectiveDate,
                        DateTime.Now, Alarma.Order.DecevalAccount.AccountNumber, Alarma.Email , Alarma.Order.PercentageCommission.ToString() , Alarma.Order.Justification)</mca:CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <FlowStep.Next>
                                          <FlowStep x:Name="__ReferenceID0">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">
                                                  <mca:CSharpReference x:TypeArguments="x:Int32">IdAlarm</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <FlowStep.Next>
                                              <FlowStep x:Name="__ReferenceID16">
                                                <Assign>
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">
                                                      <mca:CSharpReference x:TypeArguments="x:Int32">IdAlarm</mca:CSharpReference>
                                                    </OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">
                                                      <mca:CSharpValue x:TypeArguments="x:Int32" xml:space="preserve">Data.Alarma.Adicionar(Alarma.Order.Instrument.mnemonic, Alarma.Order.Client.Id, Convert.ToDecimal(Alarma.Value),
                    strIndicador, lIdPreorden, Alarma.OriginatorId);</mca:CSharpValue>
                                                    </InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <FlowStep.Next>
                                                  <FlowStep x:Name="__ReferenceID17">
                                                    <Assign>
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Int32">
                                                          <mca:CSharpReference x:TypeArguments="x:Int32">Alarma.Id</mca:CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Int32">
                                                          <mca:CSharpValue x:TypeArguments="x:Int32">IdAlarm</mca:CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <FlowStep.Next>
                                                      <FlowStep x:Name="__ReferenceID18">
                                                        <Assign>
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="dtim:Error">
                                                              <mca:CSharpReference x:TypeArguments="dtim:Error">Alarma.Error</mca:CSharpReference>
                                                            </OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="dtim:Error">
                                                              <mca:CSharpValue x:TypeArguments="dtim:Error">new Infrastructure.Models.Error()</mca:CSharpValue>
                                                            </InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <FlowStep.Next>
                                                          <FlowStep x:Name="__ReferenceID19">
                                                            <Assign>
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:Boolean">
                                                                  <mca:CSharpReference x:TypeArguments="x:Boolean">Alarma.Error.existError</mca:CSharpReference>
                                                                </OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                          </FlowStep>
                                                        </FlowStep.Next>
                                                      </FlowStep>
                                                    </FlowStep.Next>
                                                  </FlowStep>
                                                </FlowStep.Next>
                                              </FlowStep>
                                            </FlowStep.Next>
                                          </FlowStep>
                                        </FlowStep.Next>
                                      </FlowStep>
                                      <FlowStep x:Key="1" x:Name="__ReferenceID20">
                                        <Assign>
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int64">
                                              <mca:CSharpReference x:TypeArguments="x:Int64">lIdPreorden</mca:CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int64">
                                              <mca:CSharpValue x:TypeArguments="x:Int64" xml:space="preserve">Data.Orden.AdicionarAlarma(Alarma.Order.Instrument.mnemonic,
                        Alarma.Order.Client.Id.Replace(',','.'), strOrderType, strBussinessType,
                        Alarma.Order.Quantity, Convert.ToDecimal(Alarma.Order.Value), Alarma.Order.EffectiveDate,
                        DateTime.Now, Alarma.Order.DecevalAccount.AccountNumber, Alarma.Email, Alarma.OriginatorId);</mca:CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <FlowStep.Next>
                                          <x:Reference>__ReferenceID0</x:Reference>
                                        </FlowStep.Next>
                                      </FlowStep>
                                      <x:Reference>__ReferenceID1<x:Key>3</x:Key></x:Reference>
                                      <FlowStep x:Key="2" x:Name="__ReferenceID21">
                                        <Assign>
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int64">
                                              <mca:CSharpReference x:TypeArguments="x:Int64">lIdPreorden</mca:CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int64">
                                              <mca:CSharpValue x:TypeArguments="x:Int64">Data.Orden.AdicionarAlarmaPreOrden(Alarma)</mca:CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <FlowStep.Next>
                                          <FlowStep x:Name="__ReferenceID4">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">
                                                  <mca:CSharpReference x:TypeArguments="x:Int32">IdAlarm</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <FlowStep.Next>
                                              <FlowStep x:Name="__ReferenceID25">
                                                <Assign>
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">
                                                      <mca:CSharpReference x:TypeArguments="x:Int32">IdAlarm</mca:CSharpReference>
                                                    </OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">
                                                      <mca:CSharpValue x:TypeArguments="x:Int32" xml:space="preserve">Data.Alarma.AdicionarCA(Alarma.Order.Instrument.mnemonic, Alarma.Order.Client.Id, Convert.ToDecimal(Alarma.Value),
                    strIndicador, lIdPreorden, Alarma.OriginatorId);</mca:CSharpValue>
                                                    </InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <FlowStep.Next>
                                                  <FlowStep x:Name="__ReferenceID24">
                                                    <Assign>
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Int32">
                                                          <mca:CSharpReference x:TypeArguments="x:Int32">Alarma.Id</mca:CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Int32">
                                                          <mca:CSharpValue x:TypeArguments="x:Int32">IdAlarm</mca:CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <FlowStep.Next>
                                                      <FlowStep x:Name="__ReferenceID23">
                                                        <Assign>
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="dtim:Error">
                                                              <mca:CSharpReference x:TypeArguments="dtim:Error">Alarma.Error</mca:CSharpReference>
                                                            </OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="dtim:Error">
                                                              <mca:CSharpValue x:TypeArguments="dtim:Error">new Infrastructure.Models.Error()</mca:CSharpValue>
                                                            </InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <FlowStep.Next>
                                                          <FlowStep x:Name="__ReferenceID22">
                                                            <Assign>
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:Boolean">
                                                                  <mca:CSharpReference x:TypeArguments="x:Boolean">Alarma.Error.existError</mca:CSharpReference>
                                                                </OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                          </FlowStep>
                                                        </FlowStep.Next>
                                                      </FlowStep>
                                                    </FlowStep.Next>
                                                  </FlowStep>
                                                </FlowStep.Next>
                                              </FlowStep>
                                            </FlowStep.Next>
                                          </FlowStep>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowSwitch>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.True>
                              <FlowDecision.False>
                                <FlowStep x:Name="__ReferenceID15">
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Char">
                                        <mca:CSharpReference x:TypeArguments="x:Char">strOrderType</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Char">L</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <FlowStep.Next>
                                    <x:Reference>__ReferenceID2</x:Reference>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.False>
                            </FlowDecision>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <FlowStep x:Name="__ReferenceID13">
                          <Assign>
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Char">
                                <mca:CSharpReference x:TypeArguments="x:Char">strBussinessType</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Char">V</InArgument>
                            </Assign.Value>
                          </Assign>
                          <FlowStep.Next>
                            <x:Reference>__ReferenceID3</x:Reference>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.False>
                    </FlowDecision>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <FlowSwitch x:TypeArguments="x:Int32" x:Name="__ReferenceID26">
                      <FlowSwitch.Expression>
                        <mca:CSharpValue x:TypeArguments="x:Int32">IdFirma</mca:CSharpValue>
                      </FlowSwitch.Expression>
                      <x:Reference>__ReferenceID0<x:Key>0</x:Key></x:Reference>
                      <x:Reference>__ReferenceID0<x:Key>1</x:Key></x:Reference>
                      <x:Reference>__ReferenceID0<x:Key>3</x:Key></x:Reference>
                      <x:Reference>__ReferenceID4<x:Key>2</x:Key></x:Reference>
                    </FlowSwitch>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowStep.Next>
            </FlowStep>
          </FlowDecision.True>
          <FlowDecision.False>
            <FlowDecision x:Name="__ReferenceID9">
              <FlowDecision.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">Alarma.Indicator == Infrastructure.Enumerations.IndicatorAlarmcs.MenorOIgual</mca:CSharpValue>
              </FlowDecision.Condition>
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID8">
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">
                        <mca:CSharpReference x:TypeArguments="x:String">strIndicador</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Menor o Igual</InArgument>
                    </Assign.Value>
                  </Assign>
                  <FlowStep.Next>
                    <x:Reference>__ReferenceID5</x:Reference>
                  </FlowStep.Next>
                </FlowStep>
              </FlowDecision.True>
              <FlowDecision.False>
                <FlowStep x:Name="__ReferenceID10">
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">
                        <mca:CSharpReference x:TypeArguments="x:String">strIndicador</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Ninguno</InArgument>
                    </Assign.Value>
                  </Assign>
                  <FlowStep.Next>
                    <x:Reference>__ReferenceID5</x:Reference>
                  </FlowStep.Next>
                </FlowStep>
              </FlowDecision.False>
            </FlowDecision>
          </FlowDecision.False>
        </FlowDecision>
      </Flowchart.StartNode>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID6</x:Reference>
      <x:Reference>__ReferenceID7</x:Reference>
      <x:Reference>__ReferenceID8</x:Reference>
      <x:Reference>__ReferenceID9</x:Reference>
      <x:Reference>__ReferenceID10</x:Reference>
      <x:Reference>__ReferenceID5</x:Reference>
      <x:Reference>__ReferenceID11</x:Reference>
      <x:Reference>__ReferenceID12</x:Reference>
      <x:Reference>__ReferenceID13</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
      <x:Reference>__ReferenceID14</x:Reference>
      <x:Reference>__ReferenceID15</x:Reference>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID0</x:Reference>
      <x:Reference>__ReferenceID16</x:Reference>
      <x:Reference>__ReferenceID17</x:Reference>
      <x:Reference>__ReferenceID18</x:Reference>
      <x:Reference>__ReferenceID19</x:Reference>
      <x:Reference>__ReferenceID20</x:Reference>
      <x:Reference>__ReferenceID21</x:Reference>
      <x:Reference>__ReferenceID22</x:Reference>
      <x:Reference>__ReferenceID23</x:Reference>
      <x:Reference>__ReferenceID24</x:Reference>
      <x:Reference>__ReferenceID25</x:Reference>
      <x:Reference>__ReferenceID4</x:Reference>
      <FlowSwitch x:TypeArguments="x:Int32">
        <FlowSwitch.Expression>
          <mca:CSharpValue x:TypeArguments="x:Int32">IdFirma</mca:CSharpValue>
        </FlowSwitch.Expression>
      </FlowSwitch>
      <x:Reference>__ReferenceID26</x:Reference>
      <sads:DebugSymbol.Symbol>9xAJkk35earcuIlnZRPC3wc9Q0M6XFRGU1xUcmFkaW5nU29sdXRpb25cRGF0YWlmeC5UcmFkaW5nLkFjdGl2aXR5XEFsYXJtc0FjdGl2aXR5LnhhbWxENgPRAw8CAQFAC0CWAQMBwAKIAw+IA5oBAwG4Ap0DEaYDGgMBrgJRE1FmAwGmAvkCF/kCWwMBngL+ASuHAjQDAZQCigIvlgI4AwGDApkCM6QCPAMB8gGnAjeyAkADAeEBtQI7vgJEAwHXAY4BK5cBNAMBzQGaAS+mATgDAbwBqQEztAE8AwGrAbcBN8IBQAMBmgHFATvOAUQDAZABVhdWowEDAYgB5QIZ7gIiAgF+Zx9njwECAXbQAiHZAioCAWx6J3prAgFk8AEn+wEwAgFTfSeLATACAULbASfpATACATFrIXYqAgEgWhljIgIBFowDEZUDGgIBDEQNTRYCAQKkAzykA0MDAbcCoAMXoANpAwGvAoUCVYUCVgMBnQKBAjGBAn0DAZUCkgI1kwJXAwGMAo0CNY0CgQEDAYQCoQI5oQJ9AwH7AZwCOZwChwEDAfMBrwI9rwKeAQMB6gGqAj2qApEBAwHiAbwCZ7wCbAMB4AG4AkG4Ap8BAwHYAZUBVZUBVgMB1gGRATGRAX0DAc4BogE1owFXAwHFAZ0BNZ0BgQEDAb0BsQE5sQF9AwG0AawBOawBhwEDAawBvwE9vwGeAQMBowG6AT26AZEBAwGbAcwBZ8wBbAMBmQHIAUHIAZ8BAwGRAewCQuwCQwMBhwHoAh/oAnMCAX/XAkrXAksCAXXTAifTAncCAW34AS34AZQBAgFc8wEt8wF9AgFUhQEtiAG9AQIBS4ABLYABfQIBQ+MBLeYBhwECATreAS3eAX0CATJzJ3N7AgEpbidudwIBIWFCYUMCAR9dH11zAgEXkwM8kwNJAgEVjwMXjwNpAgENSzhLRQIBC0cTR2UCAQM=</sads:DebugSymbol.Symbol>
    </Flowchart>
  </dta:AlarmsActivity.Implementation>
</dta:AlarmsActivity>